<?xml version="1.0" ?>
<!-- $Id$ -->

<makefile>
    
    <if cond="FORMAT!='mingw'">
        <include file="makefile_defs_unix.bkl"/>
    
        <!-- 
          We define compilation differently for GNU than for generic Unix:
            * dependencies tracking is used
            * we can use $< even in non-suffix rules -> smaller makefiles
          -->
        <set var="CPPDEPS" make_var="1">
        -MT$(DOLLAR)@ -MF`echo $(DOLLAR)@ | sed -e 's,\.o$(DOLLAR)$(DOLLAR),.d,'` -MD
        </set>
        
        <template id="__commands_templ_C">
            <set var="__COMPILE_C_CMD" eval="0">
                $(CCC) -c -o $@ $(__cflags) $(CPPDEPS) $&lt;
            </set>
        </template>
        <template id="__commands_templ_CXX">
            <set var="__COMPILE_CXX_CMD" eval="0">
                $(CXXC) -c -o $@ $(__cxxflags) $(CPPDEPS) $&lt;
            </set>
        </template>
    
    </if>
    
    <set var="AROPTIONS">rcu</set>
    <set var="DLLPREFIX_MODULE"></set>
    
    <set var="__DEFINE_ARG">-D</set>
    <set var="__INCLUDE_ARG">-I</set>
    <set var="__LIB_ARG">-l%s</set>
    <set var="__LIBDIR_ARG">-L</set>

    <set var="__DEFAULT_CC">gcc</set>
    <set var="__DEFAULT_CXX">g++</set>
    <set var="__DEFAULT_CFLAGS"></set>
    <set var="__DEFAULT_CPPFLAGS"></set>
    <set var="__DEFAULT_CXXFLAGS"></set>
    <set var="__DEFAULT_LDFLAGS"></set>
    
    <set var="__DLL_LINKER_CC" eval="0">$(CC) -shared -fPIC -o</set>
    <set var="__DLL_LINKER_CXX" eval="0">$(CXX) -shared -fPIC -o</set>
    <set var="__MODULE_LINKER_CC">$(__DLL_LINKER_CC)</set>
    <set var="__MODULE_LINKER_CXX">$(__DLL_LINKER_CXX)</set>
    
    <!-- 
    basic compiler/linker flags (they are left almost empty because
    it is configure's job to ensure correct cflags):
    -->
    <set var="__FLAG_DEBUG_ON">-g</set>
    <set var="__FLAG_DEBUG_ON_LINKER">-g</set>
    <set var="__FLAG_DEBUG_OFF"></set>
    <set var="__FLAG_DEBUG_OFF_LINKER"></set>
    <set var="__FLAG_OPTIMIZE_OFF">-O0</set>
    <set var="__FLAG_OPTIMIZE_SIZE">-Os</set>
    <set var="__FLAG_OPTIMIZE_SPEED">-O2</set>
    <set var="__FLAG_ARCH_I386">-march=i386</set>
    <set var="__FLAG_ARCH_I486">-march=i486</set>
    <set var="__FLAG_ARCH_I586">-march=i586</set>
    <set var="__FLAG_ARCH_I686">-march=i686</set>
    <set var="__FLAG_USE_PCH"></set>
    <set var="__FLAG_PCH_FILE"></set>
    <set var="__FLAG_SINGLE_THREADING_LD"/>
    <set var="__FLAG_MULTI_THREADING_LD">-pthread</set>
    <set var="__FLAG_SINGLE_THREADING_CPP"/>
    <set var="__FLAG_MULTI_THREADING_CPP">-D_THREAD_SAFE -pthread</set>
    <set var="__FLAG_WARNINGS_NO"/>
    <set var="__FLAG_WARNINGS_DEFAULT"/>
    <set var="__FLAG_WARNINGS_MAX">-W -Wall</set>
    
    <set var="__FLAG_RTTI_ON"></set>
    <set var="__FLAG_RTTI_OFF">-fno-rtti</set>
    <set var="__FLAG_EXCEPTIONS_ON"></set>    
    <set var="__FLAG_EXCEPTIONS_OFF">-fno-exceptions</set>

</makefile>
