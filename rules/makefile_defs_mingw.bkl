<?xml version="1.0" ?>
<!-- $Id$ -->

<!-- 
This file is common to all formats that share Unix way of writing 
makefiles (most notably GNU Make and Autoconf formats).
-->

<makefile>
    
    <include file="win32.bkl"/>
    <include file="makefile_defs_gnu.bkl"/>
    
    <set var="AR">ar</set>
    <set var="RANLIB">ranlib</set>
    <set var="WINDRES">windres --use-temp-file</set>

    <set var="OBJEXT">.o</set>
    <set var="LIBEXT">.a</set>
    <set var="LIBPREFIX">lib</set>
    <set var="DLLIMPEXT">.a</set>
    <set var="DLLPREFIX"></set>
    <set var="PIC_CFLAGS"></set>
    
    <set var="__LINKER_CC" eval="0">$(CC)</set>
    <set var="__LINKER_CXX" eval="0">$(CXX)</set>
    
    <set var="__FLAG_MULTI_THREADING_LD">-mthreads</set>
    <set var="__FLAG_MULTI_THREADING_CPP">-mthreads</set>

    <set var="__FLAG_EXE_CONSOLE"></set>
    <set var="__FLAG_EXE_GUI">-Wl,--subsystem,windows -mwindows</set>
    
    <!-- dependency tracking: -->
    <set var="CPPDEPS" make_var="1">-MT$(DOLLAR)@ -MF$(DOLLAR)@.d -MD</set>

    <template id="__commands_templ_C">
        <set var="__COMPILE_C_CMD" eval="0">
            $(CC) -c -o $@ $(__cflags) $(CPPDEPS) $&lt;
        </set>
    </template>
    <template id="__commands_templ_CXX">
        <set var="__COMPILE_CXX_CMD" eval="0">
            $(CXX) -c -o $@ $(__cxxflags) $(CPPDEPS) $&lt;
        </set>
    </template>
    <template id="__commands_templ">
        <set var="__LINK_EXE_CMD" eval="0">
            $(__linker) -o $@ $(__objects_var) $(__ldflags) $(__ldlibs)
        </set>        
        <set var="__LINK_LIB_CMD" eval="0">
            if exist $@ del $@
            $(AR) $(AROPTIONS) $@ $(__objects_var)
            $(RANLIB) $@
        </set>
        <set var="__LINK_DLL_CMD" eval="0">
            $(__dll_linker) $@ $(__objects_var) $(__ldflags) $(__ldlibs)
        </set>
        <set var="__LINK_MODULE_CMD" eval="0">
            $(__module_linker) $@ $(__objects_var) $(__ldflags) $(__ldlibs)
        </set>
    </template>

    <template id="__subproject_templ">
        <set var="__MAKE_SUBPROJECT_CMD" eval="0">
            $(DOLLAR)(MAKE) -C $(__subdir) -f $(os.path.basename(OUTPUT_FILE)) $(MAKEARGS) $(__subtarget)
        </set>
        <set var="__INSTALL_SUBPROJECT_CMD" eval="0">
            $(DOLLAR)(MAKE) -C $(__subdir) -f $(os.path.basename(OUTPUT_FILE)) $(MAKEARGS) install
        </set>
        <set var="__UNINSTALL_SUBPROJECT_CMD" eval="0">
            $(DOLLAR)(MAKE) -C $(__subdir) -f $(os.path.basename(OUTPUT_FILE)) $(MAKEARGS) uninstall
        </set>
        <set var="__CLEAN_SUBPROJECT_CMD" eval="0">
            $(DOLLAR)(MAKE) -C $(__subdir) -f $(os.path.basename(OUTPUT_FILE)) $(MAKEARGS) clean
        </set>
    </template>

</makefile>
