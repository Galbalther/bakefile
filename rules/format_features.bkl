<?xml version="1.0" ?>
<!-- $Id$ -->

<!--
This is a helper file that declares variables that describe optional format
backend features. All features are set to meaningful defaults here and format
files such as autoconf.bkl must override the setting if they want to take
advantage of a particular feature.
-->

<makefile>

    <!--
    This boolean flag indicates whether the output format supports variables.
    If it does, then some space and time optimization are possible and long
    Bakefile variables that would otherwise be expanded into literals are left
    as variables in generated makefile/project.
    
    Makefiles generally do, that's why makefile.bkl sets this to 1.
    -->
    <set var="FORMAT_HAS_VARIABLES">0</set>

    
    <!--
    Comma separated list of variables (both global and target) used by output
    writer. Output Empy template then can only use variables from this list.
    This does not affect conditional or make variables or options - they are
    always all available.  

    This list can be used to speed up finalization phase of Bakefile processing
    and it improves efficiency of unused variables purging as well.
    
    If the list is empty then all variables are treated as used by the writer.
    -->
    <set var="FORMAT_OUTPUT_VARIABLES"></set>

    <!--
    Whether the output format can handle conditions (i.e. variable values
    depending on conditions and conditionally built targets) at all. Most
    make-tools do, but e.g. MSVC project files can't do it. If set to 0, then
    the targets and variables are "flattened" = 
    -->
    <set var="FORMAT_SUPPORTS_CONDITIONS">1</set>


    <!--
    Whether the output format needs to have options that are used by
    conditions listed in the output file. This is true in majority of cases
    because the conditions take form such as "!if $(OPT) == value" and OPT must
    be defined, but there's one exception: autoconf. It decides on whether
    the condition is true or false in autoconf_inc.m4 and Makefile.in does not
    need the variables, so we can safely purge them and save some space.

    Set to 1 by default, only autoconf overwrites the setting.
    -->
    <set var="FORMAT_NEEDS_OPTION_VALUES_FOR_CONDITIONS">1</set>

</makefile>

