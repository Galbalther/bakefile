<?xml version="1.0" ?>
<!-- $Id$ -->

<makefile>
    
    <!-- =============================================================== -->
    <!--                       Configuration:                            -->
    <!-- =============================================================== -->

    <option name="SHARED_LD_CC"/>
    <option name="SHARED_LD_CXX"/>
    <option name="SO_SUFFIX"/>
    <option name="EXEEXT"/>
    <option name="LN_S"/>
    <option name="RESCOMP"/>
    <option name="SETFILE"/>
    <option name="PIC_FLAG"/>
    <option name="USE_SOVERSION"><values>0 1</values></option>
    <option name="USE_SOVERLINUX"><values>0 1</values></option>
    <option name="USE_SOVERSOLARIS"><values>0 1</values></option>
    <option name="USE_SOSYMLINKS"><values>0 1</values></option>
    <option name="USE_MACVERSION"><values>0 1</values></option>
    <option name="SONAME_FLAG"/>
    <option name="STRIP"/>
    <option name="INSTALL"/>
    <option name="INSTALL_PROGRAM"/>
    <option name="INSTALL_DATA"/>
    <option name="INSTALL_DIR"/>
    <option name="DEPS_TRACKING"><values>0 1</values></option>

    <!-- Platforms: -->
    <unset var="PLATFORM_UNIX"/>
    <unset var="PLATFORM_WIN32"/>
    <unset var="PLATFORM_MSDOS"/>
    <unset var="PLATFORM_MAC"/>
    <unset var="PLATFORM_MACOSX"/>
    <option name="PLATFORM_UNIX"/>
    <option name="PLATFORM_WIN32"/>
    <option name="PLATFORM_MSDOS"/>
    <option name="PLATFORM_MAC"/>
    <option name="PLATFORM_MACOSX"/>
    
    <option name="srcdir"/>
    <option name="top_srcdir"/>
    <option name="top_builddir"/>

    <option name="prefix"/>
    <option name="exec_prefix"/>
    <option name="bindir"/>
    <option name="libdir"/>
    <option name="datadir"/>
    <option name="includedir"/>
    <set var="PREFIX">$(prefix)</set>
    <set var="BINDIR">$(bindir)</set>
    <set var="LIBDIR">$(libdir)</set>
    <set var="DATADIR">$(datadir)</set>
    <set var="INCLUDEDIR">$(includedir)</set>
    
    <set var="SRCDIR">$(srcdir)</set>

    <set var="DLLEXT">.$(SO_SUFFIX)</set>
    <option name="DLLPREFIX"/>

    <set var="DLLIMPEXT">
        <if cond="PLATFORM_WIN32=='1'">.a</if>
        <if cond="PLATFORM_WIN32=='0'">$(DLLEXT)</if>
    </set>

    <set var="DLL_CFLAGS">$(PIC_FLAG)</set>
    <set var="__DLL_LINKER_CC" eval="0">$(SHARED_LD_CC)</set>
    <set var="__DLL_LINKER_CXX" eval="0">$(SHARED_LD_CXX)</set>
    
    
    <!-- =============================================================== -->
    <!--                     C/C++ dependency tracking:                  -->
    <!-- =============================================================== -->

    <set var="CCC" eval="0">
        <if cond="DEPS_TRACKING=='1'">$(top_builddir)./bk-deps $(CC)</if>
        <if cond="DEPS_TRACKING=='0'">$(CC)</if>
    </set>
    <set var="CXXC" eval="0">
        <if cond="DEPS_TRACKING=='1'">$(top_builddir)./bk-deps $(CXX)</if>
        <if cond="DEPS_TRACKING=='0'">$(CXX)</if>
    </set>
    
    <!-- =============================================================== -->
    <!--                    Load makefile meta-backend:                  -->
    <!-- =============================================================== -->
    
    <include file="makefile_macres.bkl"/>
    <set var="__exe_baser">__macexe</set>

    <include file="unixlike.bkl"/>
    <!-- autoconf can be used to compile win32 apps, too: -->
    <include file="makefile_mingw.bkl"/>    
    

    <!-- =============================================================== -->
    <!--               Shared libs/DLLs handling:                        -->
    <!-- =============================================================== -->

    <set var="__so_symlinks_cmd"/> <!-- default value -->
    <set var="__so_symlinks_inst_cmd"/> <!-- default value -->
    <set var="__mac_instname"/> <!-- default value -->

    <define-tag name="so_version" rules="dll">
        <set var="__soversion1">$(value.split('.')[0])</set>
        <set var="__soversion2">$(value.split('.')[1])</set>
        <set var="__soversion3">$(value.split('.')[2])</set>

        <set var="__linkname1">$(__linkname)</set>
        
        <set var="__targetsuf2">
            <if cond="USE_SOVERSION=='1' and PLATFORM_MACOSX=='0'">
                $(DLLEXT).$(__soversion1)
            </if>
            <if cond="USE_SOVERSION=='1' and PLATFORM_MACOSX=='1'">
                .$(__soversion1)$(DLLEXT)
            </if>
            <if cond="USE_SOVERSION=='0'">$(DLLEXT)</if>
        </set>
        <set var="__linkname2" eval="0">
            $(DLLPREFIX)$(__dllname)$(__targetsuf2)
        </set>
        
        <set var="__targetsuf3">
            <if cond="USE_SOVERSION=='1' and PLATFORM_MACOSX=='0'">
                $(DLLEXT).$(__soversion1).$(__soversion2).$(__soversion3)
            </if>
            <if cond="USE_SOVERSION=='1' and PLATFORM_MACOSX=='1'">
                .$(__soversion1).$(__soversion2).$(__soversion3)$(DLLEXT)
            </if>
        </set>
        <set var="__targetname" eval="0">
            $(DLLPREFIX)$(__dllname)$(__targetsuf3)
        </set>
        
        <set var="__soname_flags">
            <if cond="USE_SOVERLINUX=='1'"> <!-- Linux -->
                $(SONAME_FLAG)$(__linkname2)
            </if>
            <if cond="USE_SOVERSOLARIS=='1'"> <!-- Solaris -->
                $(SONAME_FLAG)$(__targetname)
            </if>
        </set>
        <ldflags>$(__soname_flags)</ldflags>

        <set var="__so_symlinks_cmd">
            <if cond="USE_SOSYMLINKS=='1'">
                $(RM) $(__targetdir)$(__linkname1) $(__targetdir)$(__linkname2);
                $(LN_S) $(__targetname) $(__targetdir)$(__linkname2);
                $(LN_S) $(__linkname2) $(__targetdir)$(__linkname1)
            </if>
        </set>
        <set var="__so_symlinks_inst_cmd">
            <if cond="USE_SOSYMLINKS=='1'">
                $(RM) $(__linkname1) $(__linkname2);
                $(LN_S) $(__targetname) $(__linkname2);
                $(LN_S) $(__linkname2) $(__linkname1)
            </if>
        </set>
        <__command>$(LF)$(__so_symlinks_cmd)</__command>
    
        <set var="__mac_instname">$(__linkname2)</set>
   
        <clean-files>
            $(ref('__targetdir',id))$(ref('__linkname1', id)) $(ref('__targetdir',id))$(ref('__linkname2', id))
        </clean-files>       
    </define-tag>
    
    <define-tag name="mac_version" rules="dll">
        <set var="__macvercur">$(value)</set>
        <set var="__macvercompat">$('.'.join(value.split('.')[0:2]))</set>
        <set var="__macver">
            <if cond="PLATFORM_MACOSX=='1'">
-compatibility_version $(__macvercompat) -current_version $(__macvercur)
            </if>
        </set>
        <ldflags>$(__macver)</ldflags>
    </define-tag>

    <define-tag name="install-to" rules="dll">
        <set var="__macinstname" eval="0">
            $(ifthenelse(__mac_instname=='',ref('__targetname',id),ref('__mac_instname',id)))
        </set>
        <set var="__macinstnamecmd">
            <if cond="PLATFORM_MACOSX=='1'">
                -install_name $(value)/$(__macinstname)
            </if>
        </set>
        <ldflags>$(__macinstnamecmd)</ldflags>

        <modify-target target="install_$(id)">
            <command>(cd $(value) ; $(ref('__so_symlinks_inst_cmd',id)))</command>
        </modify-target>
    </define-tag>
    
    <define-tag name="libname" rules="dll">
        <set var="__importlib">
            <if cond="PLATFORM_WIN32=='1'">-Wl,--out-implib,$(__targetdir)$(__linkname)</if>
        </set>
        <ldflags>$(__importlib)</ldflags>
    </define-tag>
    
    
    <!-- =============================================================== -->
    <!--                     "make install-strip":                       -->
    <!-- =============================================================== -->

    <action id="install-strip">
        <depends>install</depends>
    </action>
   
    <define-tag name="install-to" rules="dll,exe">
        <modify-target target="install-strip">
            <command>$(STRIP) $(value)/$(ref('__targetname',id))</command>
        </modify-target>
    </define-tag>
    
    <define-tag name="dir" rules="subproject">
        <modify-target target="install-strip">
            <command>(cd $(value) &amp;&amp; \$(MAKE) install-strip)</command>
        </modify-target>
    </define-tag>
    
    
    <!-- =============================================================== -->
    <!--                         "make clean":                           -->
    <!-- =============================================================== -->

    <action id="clean">
        <set var="__builddir" eval="0">$(BUILDDIR)</set>
        <command>            
            rm -rf $(__builddir)/.deps
            $(RM) -f $(__builddir)/*$(OBJEXT)
        </command>
    </action>
    
    <!-- =============================================================== -->
    <!--                       "make distclean":                         -->
    <!-- =============================================================== -->

    <action id="distclean">
        <depends>clean</depends>
        <command>
            $(RM) configure config.cache config.log config.status
            $(RM) bk-deps shared-ld-sh
        </command>
    </action>

    
    <!-- =============================================================== -->
    <!--                       Generate output:                          -->
    <!-- =============================================================== -->

    <set var="AUTOCONF_MACROS_FILE">
        $(os.path.join(os.path.dirname(OUTPUT_FILE),'autoconf_inc.m4'))
    </set>

    <output file="$(OUTPUT_FILE)" writer="autoconf.empy"/>

    <if cond="AUTOCONF_MACROS_FILE!=''">
        <output file="$(AUTOCONF_MACROS_FILE)"
                writer="autoconf-macros.empy"
                method="mergeBlocks"/>
    </if>

</makefile>
