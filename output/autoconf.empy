@empy.include(os.path.join(RULESDIR, '_hdr_makefile.empy'))

@@MAKE_SET@@

@{
specialOptions = ['prefix', 'exec_prefix', 'INSTALL']
normalOptions = [x for x in options if x.name not in specialOptions]
}@
@[for o in specialOptions]@
@o = @@@o@@
@[end for]@
@[for o in normalOptions]@
@o.name = @@@o.name@@
@[end for]@

### Variables: ###

@[for v in make_vars]@
@utils.wrapLongLine('%s = ' % v.name, v.value, ' \\', variable=v.name)
@[end for]@

### Conditionally set variables: ###

@[for c in cond_vars]@
@[for v in c.values]@
@[if len(v.value) < 75]@
@utils.wrapLongLine('@COND_%s@%s = ' % (v.cond.name, c.name), v.value, ' \\', indent='@COND_%s@\t' % v.cond.name, variable=v.cond.name)
@[end if]@
@[if len(v.value) >= 75]@
@utils.wrapLongLine('COND_%s_%s = ' % (v.cond.name, c.name), v.value, ' \\', variable=c.name)
@@COND_@v.cond.name@@@c.name = $(COND_@(v.cond.name)_@c.name)
@[end if]@
@[end for]@
@[end for]@

### Targets: ###
@[for t in targets]
@{
if t.cond == None: condstr=''
else: condstr='@COND_%s@' % t.cond.name
}@
@condstr@t.__targetdir@t.__targetname: @t.__deps
@[for cmd in t.__command.splitlines()]@
@condstr@\t@cmd.strip()
@[end for]@
@[end for]@

@[for f in fragments]
@f.content
@[end for]@

# Include dependency info, if present:
@@IF_GNU_MAKE@@-include .deps/*.d

.PHONY: @(' '.join([t.__targetdir+t.__targetname for t in targets if t.__is_phony=='1']))
